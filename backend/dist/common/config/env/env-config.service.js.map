{"version":3,"sources":["../../../../src/common/config/env/env-config.service.ts"],"sourcesContent":["import { Injectable, Logger } from '@nestjs/common';\nimport * as dotenv from 'dotenv';\nimport * as Joi from 'joi';\n\nexport interface EnvConfig {\n  [prop: string]: string;\n}\n\nexport const NODE_ENV = 'NODE_ENV';\nexport const DATABASE_URL = 'DATABASE_URL';\nexport const JWT_ALGORITHM = 'JWT_ALGORITHM';\nexport const JWT_SECRET = 'JWT_SECRET';\nexport const JWT_EXPIRES_IN = 'JWT_EXPIRES_IN';\nexport const LOGIN_EXPIRES_IN = 'LOGIN_EXPIRES_IN';\nexport const REFRESH_SECRET = 'REFRESH_SECRET';\nexport const REFRESH_EXPIRES_IN = 'REFRESH_EXPIRES_IN';\nexport const LOGIN_SECRET = 'LOGIN_SECRET';\nexport const WEBHOOK_SECRET = 'WEBHOOK_SECRET';\nexport const REDIS_HOST = 'REDIS_HOST';\nexport const REDIS_PORT = 'REDIS_PORT';\nexport const CLERK_PUBLISHABLE_KEY = 'CLERK_PUBLISHABLE_KEY';\nexport const CLERK_SECRET_KEY = 'CLERK_SECRET_KEY';\n\n@Injectable()\nexport class EnvConfigService {\n  private readonly envConfig: EnvConfig;\n\n  constructor() {\n    const config = dotenv.config().parsed;\n    this.envConfig = this.validateInput(config);\n  }\n\n  /**\n   * Ensures all needed variables are set, and returns the validated JavaScript object\n   * including the applied default values.\n   */\n  private validateInput(envConfig: EnvConfig): EnvConfig {\n    const envVarsSchema: Joi.ObjectSchema = Joi.object({\n      NODE_ENV: Joi.string()\n        .valid('development', 'production', 'test', 'provision', 'staging')\n        .default('development'),\n      DATABASE_URL: Joi.string().required(),\n      JWT_ALGORITHM: Joi.string()\n        .valid('HS256', 'HS384', 'HS512', 'RS256', 'RS384', 'RS512')\n        .default('HS256'),\n      JWT_SECRET: Joi.string().required(),\n      JWT_EXPIRES_IN: Joi.string().default('1h'),\n      LOGIN_SECRET: Joi.string().required(),\n      LOGIN_EXPIRES_IN: Joi.string().default('15m'),\n      REFRESH_SECRET: Joi.string().required(),\n      REFRESH_EXPIRES_IN: Joi.string().default('7d'),\n      WEBHOOK_SECRET: Joi.string().required(),\n      REDIS_HOST: Joi.string().required(),\n      REDIS_PORT: Joi.number().required(),\n      CLERK_PUBLISHABLE_KEY: Joi.string().required(),\n      CLERK_SECRET_KEY: Joi.string().required(),\n    });\n\n    const { error, value: validatedEnvConfig } =\n      envVarsSchema.validate(envConfig);\n    if (error) {\n      Logger.error(error, error.stack, this.constructor.name);\n      process.exit(1);\n    }\n    return validatedEnvConfig;\n  }\n\n  get(key: string): string {\n    switch (key) {\n      case DATABASE_URL:\n        return process.env.NODE_ENV === 'test'\n          ? `test_${this.envConfig[key]}`\n          : this.envConfig[key];\n      default:\n        return this.envConfig[key];\n    }\n  }\n}\n"],"names":["CLERK_PUBLISHABLE_KEY","CLERK_SECRET_KEY","DATABASE_URL","EnvConfigService","JWT_ALGORITHM","JWT_EXPIRES_IN","JWT_SECRET","LOGIN_EXPIRES_IN","LOGIN_SECRET","NODE_ENV","REDIS_HOST","REDIS_PORT","REFRESH_EXPIRES_IN","REFRESH_SECRET","WEBHOOK_SECRET","validateInput","envConfig","envVarsSchema","Joi","object","string","valid","default","required","number","error","value","validatedEnvConfig","validate","Logger","stack","constructor","name","process","exit","get","key","env","config","dotenv","parsed"],"mappings":";;;;;;;;;;;QAoBaA;eAAAA;;QACAC;eAAAA;;QAZAC;eAAAA;;QAeAC;eAAAA;;QAdAC;eAAAA;;QAEAC;eAAAA;;QADAC;eAAAA;;QAEAC;eAAAA;;QAGAC;eAAAA;;QARAC;eAAAA;;QAUAC;eAAAA;;QACAC;eAAAA;;QAJAC;eAAAA;;QADAC;eAAAA;;QAGAC;eAAAA;;;wBAjBsB;gEACX;6DACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMd,MAAML,WAAW;AACjB,MAAMP,eAAe;AACrB,MAAME,gBAAgB;AACtB,MAAME,aAAa;AACnB,MAAMD,iBAAiB;AACvB,MAAME,mBAAmB;AACzB,MAAMM,iBAAiB;AACvB,MAAMD,qBAAqB;AAC3B,MAAMJ,eAAe;AACrB,MAAMM,iBAAiB;AACvB,MAAMJ,aAAa;AACnB,MAAMC,aAAa;AACnB,MAAMX,wBAAwB;AAC9B,MAAMC,mBAAmB;AAGzB,IAAA,AAAME,mBAAN,MAAMA;IAQX;;;GAGC,GACD,AAAQY,cAAcC,SAAoB,EAAa;QACrD,MAAMC,gBAAkCC,KAAIC,MAAM,CAAC;YACjDV,UAAUS,KAAIE,MAAM,GACjBC,KAAK,CAAC,eAAe,cAAc,QAAQ,aAAa,WACxDC,OAAO,CAAC;YACXpB,cAAcgB,KAAIE,MAAM,GAAGG,QAAQ;YACnCnB,eAAec,KAAIE,MAAM,GACtBC,KAAK,CAAC,SAAS,SAAS,SAAS,SAAS,SAAS,SACnDC,OAAO,CAAC;YACXhB,YAAYY,KAAIE,MAAM,GAAGG,QAAQ;YACjClB,gBAAgBa,KAAIE,MAAM,GAAGE,OAAO,CAAC;YACrCd,cAAcU,KAAIE,MAAM,GAAGG,QAAQ;YACnChB,kBAAkBW,KAAIE,MAAM,GAAGE,OAAO,CAAC;YACvCT,gBAAgBK,KAAIE,MAAM,GAAGG,QAAQ;YACrCX,oBAAoBM,KAAIE,MAAM,GAAGE,OAAO,CAAC;YACzCR,gBAAgBI,KAAIE,MAAM,GAAGG,QAAQ;YACrCb,YAAYQ,KAAIE,MAAM,GAAGG,QAAQ;YACjCZ,YAAYO,KAAIM,MAAM,GAAGD,QAAQ;YACjCvB,uBAAuBkB,KAAIE,MAAM,GAAGG,QAAQ;YAC5CtB,kBAAkBiB,KAAIE,MAAM,GAAGG,QAAQ;QACzC;QAEA,MAAM,EAAEE,KAAK,EAAEC,OAAOC,kBAAkB,EAAE,GACxCV,cAAcW,QAAQ,CAACZ;QACzB,IAAIS,OAAO;YACTI,cAAM,CAACJ,KAAK,CAACA,OAAOA,MAAMK,KAAK,EAAE,IAAI,CAACC,WAAW,CAACC,IAAI;YACtDC,QAAQC,IAAI,CAAC;QACf;QACA,OAAOP;IACT;IAEAQ,IAAIC,GAAW,EAAU;QACvB,OAAQA;YACN,KAAKlC;gBACH,OAAO+B,QAAQI,GAAG,CAAC5B,QAAQ,KAAK,SAC5B,CAAC,KAAK,EAAE,IAAI,CAACO,SAAS,CAACoB,IAAI,EAAE,GAC7B,IAAI,CAACpB,SAAS,CAACoB,IAAI;YACzB;gBACE,OAAO,IAAI,CAACpB,SAAS,CAACoB,IAAI;QAC9B;IACF;IAjDAL,aAAc;QACZ,MAAMO,SAASC,QAAOD,MAAM,GAAGE,MAAM;QACrC,IAAI,CAACxB,SAAS,GAAG,IAAI,CAACD,aAAa,CAACuB;IACtC;AA+CF"}