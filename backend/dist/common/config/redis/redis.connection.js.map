{"version":3,"sources":["../../../../src/common/config/redis/redis.connection.ts"],"sourcesContent":["import { RedisModule } from '@nestjs-modules/ioredis';\nimport { Global, Module } from '@nestjs/common';\nimport Redis from 'ioredis';\nimport { EnvConfigService } from '../env/env-config.service';\n\n@Global()\n@Module({\n  imports: [\n    RedisModule.forRootAsync({\n      useFactory: async (configService: EnvConfigService) => ({\n        type: 'single',\n        url: `redis://${configService.get('REDIS_HOST')}:${+configService.get('REDIS_PORT')}/`,\n      }),\n      inject: [EnvConfigService],\n    }),\n  ],\n  providers: [\n    {\n      provide: 'REDIS_CLIENT',\n      useFactory: (configService: EnvConfigService) => {\n        return new Redis({\n          host: configService.get('REDIS_HOST'),\n          port: +configService.get('REDIS_PORT'),\n        });\n      },\n      inject: [EnvConfigService],\n    },\n  ],\n  exports: ['REDIS_CLIENT'],\n})\nexport class RedisConfigModule {}\n"],"names":["RedisConfigModule","imports","RedisModule","forRootAsync","useFactory","configService","type","url","get","inject","EnvConfigService","providers","provide","Redis","host","port","exports"],"mappings":";;;;+BA8BaA;;;eAAAA;;;yBA9Be;wBACG;iEACb;kCACe;;;;;;;;;;;;AA2B1B,IAAA,AAAMA,oBAAN,MAAMA;AAAmB;;;;QAvB9BC,SAAS;YACPC,oBAAW,CAACC,YAAY,CAAC;gBACvBC,YAAY,OAAOC,gBAAqC,CAAA;wBACtDC,MAAM;wBACNC,KAAK,CAAC,QAAQ,EAAEF,cAAcG,GAAG,CAAC,cAAc,CAAC,EAAE,CAACH,cAAcG,GAAG,CAAC,cAAc,CAAC,CAAC;oBACxF,CAAA;gBACAC,QAAQ;oBAACC,kCAAgB;iBAAC;YAC5B;SACD;QACDC,WAAW;YACT;gBACEC,SAAS;gBACTR,YAAY,CAACC;oBACX,OAAO,IAAIQ,iBAAK,CAAC;wBACfC,MAAMT,cAAcG,GAAG,CAAC;wBACxBO,MAAM,CAACV,cAAcG,GAAG,CAAC;oBAC3B;gBACF;gBACAC,QAAQ;oBAACC,kCAAgB;iBAAC;YAC5B;SACD;QACDM,SAAS;YAAC;SAAe"}