{"version":3,"sources":["../../../../src/common/lib/date/index.ts"],"sourcesContent":["import { Injectable } from '@nestjs/common';\nimport * as dayjs from 'dayjs';\n@Injectable()\nexport class DateService {\n  private dayjs = dayjs;\n\n  getIsoDate() {\n    const isoDate = dayjs().toISOString();\n    return isoDate;\n  }\n  getCurrentDate() {\n    const currentDate = dayjs().format('YYYY-MM-DD');\n    return currentDate;\n  }\n\n  getCurrentYear() {\n    const currentYear = dayjs().format('YYYY');\n    return currentYear;\n  }\n\n  getCurrentMonth() {\n    const currentMonth = dayjs().format('MM');\n    return currentMonth;\n  }\n\n  getCurrentDay() {\n    const currentDay = dayjs().format('DD');\n    return currentDay;\n  }\n\n  getCurrentTime(): string {\n    return dayjs().format('HH:mm:ss ');\n  }\n\n  getCurrentDateTime(): string {\n    return dayjs().format('YYYY-MM-DD HH:mm:ss');\n  }\n\n  addDays(days: number, date: string = this.getCurrentDate()): string {\n    return dayjs(date).add(days, 'day').format('YYYY-MM-DD');\n  }\n\n  addMonths(months: number, date: string = this.getCurrentDate()): string {\n    return dayjs(date).add(months, 'month').format('YYYY-MM-DD');\n  }\n\n  addYears(years: number, date: string = this.getCurrentDate()): string {\n    return dayjs(date).add(years, 'year').format('YYYY-MM-DD');\n  }\n\n  addHours(hours: number, date: string = this.getCurrentDateTime()): string {\n    return dayjs(date).add(hours, 'hour').format('YYYY-MM-DD HH:mm:ss');\n  }\n\n  startOfDay(date: string | Date): string {\n    return dayjs(date).startOf('day').toISOString();\n  }\n\n  endOfDay(date: string | Date): string {\n    return dayjs(date).endOf('day').toISOString();\n  }\n\n  getStartOfDay(date: string | Date): string {\n    return dayjs(date).startOf('day').toISOString();\n  }\n\n  getEndOfDay(date: string | Date): string {\n    return dayjs(date).endOf('day').toISOString();\n  }\n\n  // get current time in 12 hours format timezone\n  getCurrentTimeIn12Hours(): string {\n    return dayjs().format('h:mm A');\n  }\n\n  // get current time in 24 hours format\n  getCurrentTimeIn24Hours(): string {\n    return dayjs().format('HH:mm');\n  }\n}\n"],"names":["DateService","getIsoDate","isoDate","dayjs","toISOString","getCurrentDate","currentDate","format","getCurrentYear","currentYear","getCurrentMonth","currentMonth","getCurrentDay","currentDay","getCurrentTime","getCurrentDateTime","addDays","days","date","add","addMonths","months","addYears","years","addHours","hours","startOfDay","startOf","endOfDay","endOf","getStartOfDay","getEndOfDay","getCurrentTimeIn12Hours","getCurrentTimeIn24Hours"],"mappings":";;;;+BAGaA;;;eAAAA;;;wBAHc;+DACJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEhB,IAAA,AAAMA,cAAN,MAAMA;IAGXC,aAAa;QACX,MAAMC,UAAUC,SAAQC,WAAW;QACnC,OAAOF;IACT;IACAG,iBAAiB;QACf,MAAMC,cAAcH,SAAQI,MAAM,CAAC;QACnC,OAAOD;IACT;IAEAE,iBAAiB;QACf,MAAMC,cAAcN,SAAQI,MAAM,CAAC;QACnC,OAAOE;IACT;IAEAC,kBAAkB;QAChB,MAAMC,eAAeR,SAAQI,MAAM,CAAC;QACpC,OAAOI;IACT;IAEAC,gBAAgB;QACd,MAAMC,aAAaV,SAAQI,MAAM,CAAC;QAClC,OAAOM;IACT;IAEAC,iBAAyB;QACvB,OAAOX,SAAQI,MAAM,CAAC;IACxB;IAEAQ,qBAA6B;QAC3B,OAAOZ,SAAQI,MAAM,CAAC;IACxB;IAEAS,QAAQC,IAAY,EAAEC,OAAe,IAAI,CAACb,cAAc,EAAE,EAAU;QAClE,OAAOF,OAAMe,MAAMC,GAAG,CAACF,MAAM,OAAOV,MAAM,CAAC;IAC7C;IAEAa,UAAUC,MAAc,EAAEH,OAAe,IAAI,CAACb,cAAc,EAAE,EAAU;QACtE,OAAOF,OAAMe,MAAMC,GAAG,CAACE,QAAQ,SAASd,MAAM,CAAC;IACjD;IAEAe,SAASC,KAAa,EAAEL,OAAe,IAAI,CAACb,cAAc,EAAE,EAAU;QACpE,OAAOF,OAAMe,MAAMC,GAAG,CAACI,OAAO,QAAQhB,MAAM,CAAC;IAC/C;IAEAiB,SAASC,KAAa,EAAEP,OAAe,IAAI,CAACH,kBAAkB,EAAE,EAAU;QACxE,OAAOZ,OAAMe,MAAMC,GAAG,CAACM,OAAO,QAAQlB,MAAM,CAAC;IAC/C;IAEAmB,WAAWR,IAAmB,EAAU;QACtC,OAAOf,OAAMe,MAAMS,OAAO,CAAC,OAAOvB,WAAW;IAC/C;IAEAwB,SAASV,IAAmB,EAAU;QACpC,OAAOf,OAAMe,MAAMW,KAAK,CAAC,OAAOzB,WAAW;IAC7C;IAEA0B,cAAcZ,IAAmB,EAAU;QACzC,OAAOf,OAAMe,MAAMS,OAAO,CAAC,OAAOvB,WAAW;IAC/C;IAEA2B,YAAYb,IAAmB,EAAU;QACvC,OAAOf,OAAMe,MAAMW,KAAK,CAAC,OAAOzB,WAAW;IAC7C;IAEA,+CAA+C;IAC/C4B,0BAAkC;QAChC,OAAO7B,SAAQI,MAAM,CAAC;IACxB;IAEA,sCAAsC;IACtC0B,0BAAkC;QAChC,OAAO9B,SAAQI,MAAM,CAAC;IACxB;;aA1EQJ,QAAQA;;AA2ElB"}