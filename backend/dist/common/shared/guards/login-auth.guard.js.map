{"version":3,"sources":["../../../../src/common/shared/guards/login-auth.guard.ts"],"sourcesContent":["import {\n  CanActivate,\n  ExecutionContext,\n  Injectable,\n  Logger,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { RequestWithUser } from '../interface/response';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  private readonly logger = new Logger(AuthGuard.name);\n\n  canActivate(\n    context: ExecutionContext,\n  ): boolean | Promise<boolean> | Observable<boolean> {\n    // Get the request object\n    const request = context.switchToHttp().getRequest<RequestWithUser>();\n\n    // Check if the user is authenticated\n    if (!request.user)\n      throw new UnauthorizedException(\n        'You are not logged in. Please log in to access this resource.',\n      );\n\n    // check users value\n    if (!Object?.values(request?.user || {})?.length)\n      throw new UnauthorizedException(\n        'You are not logged in. Please log in to access this resource.',\n      );\n\n    // log the user info\n    this.logger.log(request?.user);\n\n    // Return true if the user is authenticated\n    return true;\n  }\n}\n"],"names":["AuthGuard","canActivate","context","request","switchToHttp","getRequest","user","UnauthorizedException","Object","values","length","logger","log","Logger","name"],"mappings":";;;;+BAWaA;;;eAAAA;;;wBALN;;;;;;;AAKA,IAAA,AAAMA,YAAN,MAAMA;IAGXC,YACEC,OAAyB,EACyB;QAClD,yBAAyB;QACzB,MAAMC,UAAUD,QAAQE,YAAY,GAAGC,UAAU;QAEjD,qCAAqC;QACrC,IAAI,CAACF,QAAQG,IAAI,EACf,MAAM,IAAIC,6BAAqB,CAC7B;QAGJ,oBAAoB;QACpB,IAAI,CAACC,QAAQC,OAAON,SAASG,QAAQ,CAAC,IAAII,QACxC,MAAM,IAAIH,6BAAqB,CAC7B;QAGJ,oBAAoB;QACpB,IAAI,CAACI,MAAM,CAACC,GAAG,CAACT,SAASG;QAEzB,2CAA2C;QAC3C,OAAO;IACT;;aAzBiBK,SAAS,IAAIE,cAAM,CAACb,UAAUc,IAAI;;AA0BrD"}