{"version":3,"sources":["../../../../src/common/shared/interceptors/response.interceptors.ts"],"sourcesContent":["import {\n  CallHandler,\n  ExecutionContext,\n  Injectable,\n  NestInterceptor,\n} from '@nestjs/common';\nimport { map, Observable } from 'rxjs';\nimport { IApiResponse } from '../interface/response';\n\n@Injectable()\nexport class ResponseInterceptor<T> implements NestInterceptor {\n  intercept(context: ExecutionContext, next: CallHandler): Observable<any> {\n    const ctx = context.switchToHttp();\n    const request = ctx.getRequest();\n    const response = ctx.getResponse();\n\n    return next.handle().pipe(\n      map((data) => {\n        // If the response is already formatted (like error responses from your handler)\n        if (data?.statusCode && data?.message) {\n          response.status(data.statusCode);\n          return {\n            status: data.statusCode >= 200 && data.statusCode < 300,\n            path: request?.url,\n            statusCode: data.statusCode,\n            message: data.message,\n            timestamp: new Date().toISOString(),\n            response: data,\n          };\n        }\n\n        // For successful responses\n        const result: IApiResponse<T> = {\n          status: true,\n          path: request?.url,\n          statusCode: response.statusCode,\n          message: 'Request successful',\n          timestamp: new Date().toISOString(),\n          response: data,\n        };\n\n        return result;\n      }),\n    );\n  }\n}\n"],"names":["ResponseInterceptor","intercept","context","next","ctx","switchToHttp","request","getRequest","response","getResponse","handle","pipe","map","data","statusCode","message","status","path","url","timestamp","Date","toISOString","result"],"mappings":";;;;+BAUaA;;;eAAAA;;;wBALN;sBACyB;;;;;;;AAIzB,IAAA,AAAMA,sBAAN,MAAMA;IACXC,UAAUC,OAAyB,EAAEC,IAAiB,EAAmB;QACvE,MAAMC,MAAMF,QAAQG,YAAY;QAChC,MAAMC,UAAUF,IAAIG,UAAU;QAC9B,MAAMC,WAAWJ,IAAIK,WAAW;QAEhC,OAAON,KAAKO,MAAM,GAAGC,IAAI,CACvBC,IAAAA,SAAG,EAAC,CAACC;YACH,gFAAgF;YAChF,IAAIA,MAAMC,cAAcD,MAAME,SAAS;gBACrCP,SAASQ,MAAM,CAACH,KAAKC,UAAU;gBAC/B,OAAO;oBACLE,QAAQH,KAAKC,UAAU,IAAI,OAAOD,KAAKC,UAAU,GAAG;oBACpDG,MAAMX,SAASY;oBACfJ,YAAYD,KAAKC,UAAU;oBAC3BC,SAASF,KAAKE,OAAO;oBACrBI,WAAW,IAAIC,OAAOC,WAAW;oBACjCb,UAAUK;gBACZ;YACF;YAEA,2BAA2B;YAC3B,MAAMS,SAA0B;gBAC9BN,QAAQ;gBACRC,MAAMX,SAASY;gBACfJ,YAAYN,SAASM,UAAU;gBAC/BC,SAAS;gBACTI,WAAW,IAAIC,OAAOC,WAAW;gBACjCb,UAAUK;YACZ;YAEA,OAAOS;QACT;IAEJ;AACF"}