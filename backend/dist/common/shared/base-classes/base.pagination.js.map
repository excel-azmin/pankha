{"version":3,"sources":["../../../../src/common/shared/base-classes/base.pagination.ts"],"sourcesContent":["import { ApiProperty } from '@nestjs/swagger';\nimport { Transform } from 'class-transformer';\nimport {\n  IsDateString,\n  IsEnum,\n  IsNumber,\n  IsOptional,\n  IsString,\n} from 'class-validator';\n\nexport class BasePaginationDto {\n  @ApiProperty({\n    description: 'The page number',\n    example: 1,\n    required: false,\n  })\n  @IsOptional()\n  @Transform(({ value }) => parseInt(value))\n  @IsNumber()\n  page: number = 1;\n\n  @ApiProperty({\n    description: 'The number of items per page',\n    example: 10,\n    required: false,\n  })\n  @IsOptional()\n  @IsNumber()\n  @Transform(({ value }) => parseInt(value))\n  limit: number = 10;\n\n  @ApiProperty({\n    description: 'The field to sort by',\n    example: 'createdAt',\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  sort: string = 'createdAt';\n\n  @ApiProperty({\n    description: 'The order to sort by',\n    example: 'desc',\n    required: false,\n  })\n  @IsOptional()\n  @IsEnum(['asc', 'desc'])\n  order: 'asc' | 'desc' = 'desc';\n\n  @ApiProperty({\n    description: 'The search query',\n    example: 'John Doe',\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  search: string = '';\n\n  @ApiProperty({\n    description: 'The fields and values to filter by',\n    example: 'name:John Doe,age:30',\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  filter: string = '';\n\n  @ApiProperty({\n    description: 'The fields to select',\n    example: '_id,createdAt,updatedAt',\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  select: string = '';\n\n  @ApiProperty({\n    description: 'The from date',\n    example: '2024-01-01',\n    required: false,\n  })\n  @IsOptional()\n  @IsDateString()\n  fromDate: Date;\n\n  @ApiProperty({\n    description: 'The to date',\n    example: '2024-01-01',\n    required: false,\n  })\n  @IsOptional()\n  @IsDateString()\n  toDate: Date;\n\n  @ApiProperty({\n    description: 'The fields to select',\n    example: 'createdAt',\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  dateField: string = 'createdAt';\n\n  get skip() {\n    return (this.page - 1) * this.limit;\n  }\n\n  get orderQuery() {\n    return { [this.sort]: this.order };\n  }\n\n  get orderAggQuery() {\n    return { [this.sort]: this.order == 'asc' ? 1 : -1 };\n  }\n\n  get filterQuery() {\n    return this.filter\n      ? this.filter.split(',').reduce((acc, field) => {\n          const [key, value] = field.split(':');\n          return { ...acc, [key]: value };\n        }, {})\n      : {};\n  }\n\n  get selectFields() {\n    return this.select\n      ? this.select\n          .split(',')\n          .reduce((acc, field) => ({ ...acc, [field]: 1 }), {})\n      : {};\n  }\n\n  get dateFilterQuery() {\n    if (this.fromDate && this.toDate && this.dateField) {\n      // set the from date to the start of the day\n      const fromDate = new Date(this.fromDate);\n      fromDate.setHours(0, 0, 0, 0);\n      // set the to date to the end of the day\n      const toDate = new Date(this.toDate);\n      toDate.setHours(23, 59, 59, 999);\n      return { [this.dateField]: { $gte: fromDate, $lte: toDate } };\n    }\n\n    if (this.fromDate && this.dateField) {\n      // set the from date to the start of the day\n      const fromDate = new Date(this.fromDate);\n      fromDate.setHours(0, 0, 0, 0);\n      return { [this.dateField]: { $gte: fromDate } };\n    }\n\n    if (this.toDate && this.dateField) {\n      // set the to date to the end of the day\n      const toDate = new Date(this.toDate);\n      toDate.setHours(23, 59, 59, 999);\n      return { [this.dateField]: { $lte: toDate } };\n    }\n\n    return {};\n  }\n}\n"],"names":["BasePaginationDto","skip","page","limit","orderQuery","sort","order","orderAggQuery","filterQuery","filter","split","reduce","acc","field","key","value","selectFields","select","dateFilterQuery","fromDate","toDate","dateField","Date","setHours","$gte","$lte","search","description","example","required","parseInt"],"mappings":"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"}