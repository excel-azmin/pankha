{"version":3,"sources":["../../../../src/common/shared/cache/redis-cache.service.ts"],"sourcesContent":["import { Inject, Injectable } from '@nestjs/common';\nimport { Redis } from 'ioredis';\nimport { buildCacheKey } from 'src/common/utils/cache';\n\n@Injectable()\nexport class RedisCacheService {\n  constructor(\n    @Inject('REDIS_CLIENT')\n    private readonly redis: Redis,\n  ) {}\n\n  async setCache(prefix: string, key: string, value: any, duration = 60 * 5) {\n    const cacheKey = buildCacheKey(prefix, { key });\n    await this.redis.set(cacheKey, JSON.stringify(value), 'EX', duration);\n  }\n\n  async getCacheValue(prefix: string, key: string): Promise<any> {\n    const cachedValue = await this.redis.get(buildCacheKey(prefix, { key }));\n    return cachedValue ? JSON.parse(cachedValue) : null;\n  }\n}\n"],"names":["RedisCacheService","setCache","prefix","key","value","duration","cacheKey","buildCacheKey","redis","set","JSON","stringify","getCacheValue","cachedValue","get","parse","constructor"],"mappings":";;;;+BAKaA;;;eAAAA;;;wBALsB;yBACb;uBACQ;;;;;;;;;;;;;;;AAGvB,IAAA,AAAMA,oBAAN,MAAMA;IAMX,MAAMC,SAASC,MAAc,EAAEC,GAAW,EAAEC,KAAU,EAAEC,WAAW,KAAK,CAAC,EAAE;QACzE,MAAMC,WAAWC,IAAAA,oBAAa,EAACL,QAAQ;YAAEC;QAAI;QAC7C,MAAM,IAAI,CAACK,KAAK,CAACC,GAAG,CAACH,UAAUI,KAAKC,SAAS,CAACP,QAAQ,MAAMC;IAC9D;IAEA,MAAMO,cAAcV,MAAc,EAAEC,GAAW,EAAgB;QAC7D,MAAMU,cAAc,MAAM,IAAI,CAACL,KAAK,CAACM,GAAG,CAACP,IAAAA,oBAAa,EAACL,QAAQ;YAAEC;QAAI;QACrE,OAAOU,cAAcH,KAAKK,KAAK,CAACF,eAAe;IACjD;IAbAG,YACE,AACiBR,KAAY,CAC7B;aADiBA,QAAAA;IAChB;AAWL"}